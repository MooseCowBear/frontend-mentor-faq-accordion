:root {
    --text-main: hsl(238, 29%, 16%);
    --text-hover: hsl(14, 88%, 65%);
    --text-secondary: hsl(237, 12%, 33%);
    --text-tertiary: hsl(240, 6%, 50%);
    --background-gradient-one: hsl(273, 75%, 66%);
    --background-gradient-two: hsl(240, 73%, 65%);
    --accent: hsl(240, 5%, 91%);
}

/* reset */
*,
*::before,
*::after {
  box-sizing: border-box;
}

body,
h1,
p, 
section {
  margin: 0;
  padding: 0;
}

img {
  max-width: 100%;
  display: block;
}

button {
  font-family: inherit;
}

body {
  min-height: 100vh;
  text-rendering: optimizeSpeed;
  line-height: 1.5;
}

html:focus-within {
  scroll-behavior: smooth;
}

a:not([class]) {
  text-decoration-skip-ink: auto;
}

@media (prefers-reduced-motion: reduce) {
  html:focus-within {
   scroll-behavior: auto;
  }
  
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
/* end reset */

.desktop {
    display: none; 
}

/* mobile first */
body {
    background: linear-gradient(var(--background-gradient-one), var(--background-gradient-two));
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    align-items: center;
    font-family: "Kumbh sans", sans-serif;
    font-size: 12px;
    color: var(--text-main);
}

main {
  background-color: white;
  border-radius: 20px;
  padding: 3em;
  margin: 2em 1em;
  max-width: 29em;
  display: grid;
  grid-template-columns: 1fr;
}

.content-wrapper {
  display: flex;
  flex-direction: column;
}

h1 {
    font-size: 2.4em;
    margin-bottom: 0.6em;
}

label {
    font-size: 1.2em;
    font-weight: 400;
    color: var(--text-tertiary);
    margin-right: 2em;
    padding: 0.3em 0;
}

.box-container {
  min-height: 10em;
}

.right { 
    display: flex;
    flex-direction: column;
    align-items: center;
    margin-bottom: 1em;
}

.question-container {
    display: flex;
    flex-direction: column;
}

section {
    display: flex;
    flex-direction: column;
    border-bottom: 2px solid var(--accent);
    padding: 1em 0;
    position: relative;
    align-items: space-between;
}

p {
    color: var(--text-tertiary);
    padding-top: 1em;
    margin-right: 1em;
}

.expandable img {
    width: 1em;
}

.expandable {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
}

.left { 
    min-height: 10em;
    position: relative;
}

img.desktop, img.mobile {
    position: absolute;
}

img.figure {
    bottom: 52%;
}

img.shadow {
    bottom: 23%;
    left: 0;
    width: 100%;
}

label:hover, label:focus {
  color: var(--text-hover);
  cursor: pointer;
}

@media (min-width: 700px){
  body {
    justify-content: center;
  }

  .content-wrapper {
    flex-direction: row;
  }
  
  .box-container {
    min-width: 6em;
    position: relative;
    min-height: 100%;
  }

  main {
    grid-template-columns: 1fr 1fr;
    max-width: 50rem;
    overflow: hidden;
    padding: 2em;
  }

  .right { 
    margin: 3em;
    align-items: flex-start;
    overflow-y: scroll;
    max-height: 21.5rem;
  }

  .right::-webkit-scrollbar{
    display: none;
    -ms-overflow-style: none; 
  }

  img.mobile{
    display: none;
  }

  .desktop {
    display: block;
    height: auto;
    position: absolute;
  }

  img.figure {
    transform: scale(1.2);
    bottom: 15%;
    right: 18%;
  }

  img.shadow {
    bottom: 13%;
    left: -55%;
    transform: scale(2);
  }

  img.box {
    position: absolute;
    left: 70%;
    bottom: 34%;
    z-index: 2;
    transform: scale(2.5);
  }
}

/* for hidden checkbox stuff */
.show, p {
  display: none;
}

.show {
  display: inline;
  position: absolute;
  top: 50%;
  left: 50%;
  opacity: 0;
}

.show:focus:not(.show:checked) ~ .expandable > label  {
  color: var(--text-hover);
}

.show:checked ~ p {display: block;}

.show:checked ~ .expandable > label {
  font-weight: 700;
  color: var(--text-secondary);
}

.show:checked ~ label ~ img{
  transform: rotate(180deg);
}

.attribution { 
  font-size: 11px; 
  text-align: center; }
.attribution, .attribution a { 
  color: var(--accent); 
}
